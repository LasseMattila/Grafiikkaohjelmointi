<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - geometry - cube</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				margin: 0px;
				background-color: #000000;
				overflow: hidden;
			}
		</style>
	</head>
	<body>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/99/three.js"></script>

		<script>

			var camera, scene, renderer;
			var mesh;

			init();
			animate();

			function init() {

				camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 10000 );
				camera.position.z = 400;

				scene = new THREE.Scene();

				var texture = new THREE.TextureLoader().load( 'crate.gif' );

				var geometry = new THREE.SphereBufferGeometry( 200, 32, 32 );     // pallo
				var material = new THREE.MeshPhongMaterial( { map: texture } );  // Phong tai Lambert

				mesh = new THREE.Mesh( geometry, material );
				scene.add( mesh );            

                var directionalLight = new THREE.DirectionalLight(0xffffff, 1.5);  // directional light lisäys
                scene.add(directionalLight);                                        // ja tämä

                var spotLight = new THREE.SpotLight(0xffffff, 3, 2000, 0,17);    // spotlight
                spotLight.position.set(100, 1000, 100);
                scene.add(spotLight);   

                var spotLightHelper = new THREE.SpotLightHelper(spotLight);     // spotlight apu viiva
                scene.add(spotLightHelper);

                                                            

				renderer = new THREE.WebGLRenderer( { antialias: true } );
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );

				//

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}

			function animate() {

				requestAnimationFrame( animate );

				mesh.rotation.x += 0.005;
				mesh.rotation.y += 0.01;

				renderer.render( scene, camera );

			}

		</script>

	</body>
</html>
