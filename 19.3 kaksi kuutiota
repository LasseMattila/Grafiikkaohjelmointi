<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - geometry - cube</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				margin: 0px;
				background-color: #000000;
				overflow: hidden;
			}
		</style>
	</head>
	<body>

		<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/97/three.js"></script>

		<script src="http://stemkoski.github.io/Three.js/js/OrbitControls.js"></script> <!-- hiiri -->
		
		<!–– mobiilihiiri http://stemkoski.github.io/Three.js/js/TrackballControls.js" -->



		<script>

			var camera, scene, renderer;
			var mesh, mesh1;

			init();
			animate();

			function init() {

				camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );
				camera.position.z = 400;

				scene = new THREE.Scene();

				var texture = new THREE.TextureLoader().load( 'crate.gif' );

				var geometry = new THREE.BoxBufferGeometry( 200, 200, 200 );
				var material = new THREE.MeshBasicMaterial( { map: texture } );


				mesh = new THREE.Mesh( geometry, material );   // laatikko 1
				mesh.position.x = 250;
				scene.add( mesh );


				mesh1 = new THREE.Mesh( geometry, material );	// laatikko 2
				mesh1.position.x = -250;
				scene.add( mesh1 );

				renderer = new THREE.WebGLRenderer( { antialias: true } );
				renderer.setPixelRatio( window.devicePixelRatio );
                renderer.setSize(window.innerWidth, window.innerHeight);
                renderer.setClearColor("blue"); // Taustavärin lisäys
				document.body.appendChild( renderer.domElement );

				controls = new THREE.OrbitControls(camera, renderer.domElement); // hiiri

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

			}

			function animate() {

				requestAnimationFrame( animate );

				mesh.rotation.x += -0.005; // pyörityksiä
				mesh.rotation.y += -0.01;

				mesh1.rotation.x += 0.1;
				mesh1.rotation.y += 0.1;
				
				controls.update(); // hiiri

				renderer.render( scene, camera );

			}

		</script>

	</body>
</html>
